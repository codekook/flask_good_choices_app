"""Convert Chore username to user_id foreign key

Revision ID: 1946cd12792f
Revises: b1a4f0cc1c5d
Create Date: 2025-10-25 07:47:38.403642

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '1946cd12792f'
down_revision = 'b1a4f0cc1c5d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Step 1: Add user_id column as nullable (allows existing rows to have NULL temporarily)
    with op.batch_alter_table('chores', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))

    # Step 2: Populate user_id from username
    # This SQL finds the user.id that matches the chore's username
    connection = op.get_bind()
    connection.execute(sa.text("""
        UPDATE chores 
        SET user_id = (SELECT id FROM user WHERE user.username = chores.username)
    """))

    # Step 3: Now make user_id NOT NULL and add foreign key
    with op.batch_alter_table('chores', schema=None) as batch_op:
        batch_op.alter_column('user_id', existing_type=sa.Integer(), nullable=False)
        batch_op.create_foreign_key(
            'fk_chores_user_id', 'user', ['user_id'], ['id'])
        batch_op.drop_column('username')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Step 1: Add username column back as nullable
    with op.batch_alter_table('chores', schema=None) as batch_op:
        batch_op.add_column(
            sa.Column('username', mysql.VARCHAR(length=255), nullable=True))

    # Step 2: Populate username from user_id
    # This SQL finds the user.username that matches the chore's user_id
    connection = op.get_bind()
    connection.execute(sa.text("""
        UPDATE chores 
        SET username = (SELECT username FROM user WHERE user.id = chores.user_id)
    """))

    # Step 3: Make username NOT NULL, drop foreign key and user_id
    with op.batch_alter_table('chores', schema=None) as batch_op:
        batch_op.alter_column(
            'username', existing_type=mysql.VARCHAR(length=255), nullable=False)
        batch_op.drop_constraint('fk_chores_user_id', type_='foreignkey')
        batch_op.drop_column('user_id')

    # ### end Alembic commands ### 
